package main
import (
        "os/exec"  	
	"fmt"
	"log"
	"strings"
	"strconv"
)

func main() {
    // 创建映射
	ages := make(map[int]int)
	var gpuNumber int
	var gpuUtil int

	//cmd := exec.Command("sinfo", "-h", "-N", "-O", "NodeList,AllocMem,Memory,CPUsState,StateLong") 
        //cmd := exec.Command("nvidia-smi","pmon","-s","u","-c","1","|","grep","1792215","|","awk","'{print $4}'")

        arr := [3]int{1875599, 1792975, 1792116}
	// 循环执行命令并输出结果
	for _, i := range arr {
	    // 构建并执行复杂的 shell 命令
	    cmd := exec.Command("sh", "-c", fmt.Sprintf("nvidia-smi pmon -s u -c 1 | grep %d | awk '{print $1}'", i))
	    
	    // 获取命令的输出
	    output, err := cmd.Output()
	    if err != nil {
		log.Fatalf("Failed to execute command: %s", err)
	    }

	    // 将输出按行拆分并打印
	    outputStr := string(output)
	    lines := strings.Split(outputStr, "\n")
	    for _, line := range lines {
		// 打印非空行
		if len(strings.TrimSpace(line)) > 0 {
		    //fmt.Println(line)
		    //fmt.Println(strconv.Atoi(strings.TrimSpace(line)))
		    gpuNumber, _ := strconv.Atoi(strings.TrimSpace(line))
		    gpuNumber = gpuNumber
		}
       	    }


	    cmd1 := exec.Command("sh", "-c", fmt.Sprintf("nvidia-smi pmon -s u -c 1 | grep %d | awk '{print $4}'", i))

            // 获取命令的输出
            output1, err := cmd1.Output()
            if err != nil {
                log.Fatalf("Failed to execute command: %s", err)
            }

            // 将输出按行拆分并打印
            outputStr1 := string(output1)
            lines1 := strings.Split(outputStr1, "\n")
            for _, line1 := range lines1 {
                // 打印非空行
                if len(strings.TrimSpace(line1)) > 0 {
                    //fmt.Println(line1)
		    gpuUtil, _ := strconv.Atoi(strings.TrimSpace(line1))
		    gpuUtil = gpuUtil
		    //gpuUtil = strconv.Atoi(strings.TrimSpace(line1))
                }
            } 
	    ages[gpuNumber] = gpuUtil
            fmt.Printf("%d is %d years old\n", gpuNumber, gpuUtil)
	}
	for gpuNumber, gpuUtil := range ages {
            fmt.Printf("%d is %d years old\n", gpuNumber, gpuUtil)
        }
}
